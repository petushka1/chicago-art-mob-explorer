{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst baseURL = 'https://api.artic.edu/api/v1/';\nconst artworks = 'artworks';\nconst exhibitions = 'exhibitions';\nconst LIMIT = 100;\nexport const fetchArtworks = createAsyncThunk('gallery/fetchArtworks', function () {\n  let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  return fetch(`${baseURL}${artworks}?page=${page}&limit=${LIMIT}`).then(res => res.json()).then(data => data);\n});\nexport const fetchExhibitions = createAsyncThunk('gallery/fetchExhibitions', page => fetch(`${baseURL}${exhibitions}?page=${page}&limit=${LIMIT}`).then(res => res.json()).then(data => data));\nconst gallerySlice = createSlice({\n  name: 'gallery',\n  initialState: [[], 0],\n  reducers: {},\n  extraReducers: {\n    [fetchArtworks.fulfilled]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      const {\n        data\n      } = payload;\n      const newState = data.map(item => ({\n        id: item.id,\n        image_id: item.image_id,\n        artist_id: item.artist_id,\n        category_ids: item.category_ids,\n        artwork_type_id: item.artwork_type_id,\n        category_titles: item.category_titles,\n        title: item.title,\n        artist_title: item.artist_title,\n        date_start: item.date_start,\n        date_end: item.date_end,\n        place_of_origin: item.place_of_origin,\n        artwork_type_title: item.artwork_type_title,\n        technique_titles: item.technique_titles,\n        material_titles: item.material_titles,\n        medium_display: item.medium_display,\n        thumbnail: item.thumbnail.lqip\n      }));\n      return newState;\n    },\n    [fetchExhibitions.fulfilled]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      const {\n        data,\n        pagination\n      } = payload;\n      const newState = data.filter(item => item.artist_ids.length > 0).map(item => ({\n        id: item.id,\n        title: item.title,\n        image_url: item.image_url,\n        status: item.status,\n        artwork_ids: item.artwork_ids,\n        department_display: item.department_display,\n        artist_ids: item.artist_ids\n      }));\n      const {\n        total\n      } = pagination;\n      return [newState, total];\n    }\n  }\n});\nexport const galleryReduser = gallerySlice.actions;\nexport default gallerySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","baseURL","artworks","exhibitions","LIMIT","fetchArtworks","page","fetch","then","res","json","data","fetchExhibitions","gallerySlice","name","initialState","reducers","extraReducers","fulfilled","state","payload","newState","map","item","id","image_id","artist_id","category_ids","artwork_type_id","category_titles","title","artist_title","date_start","date_end","place_of_origin","artwork_type_title","technique_titles","material_titles","medium_display","thumbnail","lqip","pagination","filter","artist_ids","length","image_url","status","artwork_ids","department_display","total","galleryReduser","actions","reducer"],"sources":["C:/Users/Nadya/chicago-art-mob-explorer/src/store/gallery.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst baseURL = 'https://api.artic.edu/api/v1/';\nconst artworks = 'artworks';\nconst exhibitions = 'exhibitions';\nconst LIMIT = 100;\n\nexport const fetchArtworks = createAsyncThunk(\n  'gallery/fetchArtworks',\n  (page = 1) => fetch(`${baseURL}${artworks}?page=${page}&limit=${LIMIT}`)\n    .then((res) => res.json())\n    .then((data) => data),\n);\n\nexport const fetchExhibitions = createAsyncThunk(\n  'gallery/fetchExhibitions',\n  (page) => fetch(`${baseURL}${exhibitions}?page=${page}&limit=${LIMIT}`)\n    .then((res) => res.json())\n    .then((data) => data),\n);\n\nconst gallerySlice = createSlice({\n  name: 'gallery',\n  initialState: [[], 0],\n  reducers: {\n\n  },\n\n  extraReducers: {\n    [fetchArtworks.fulfilled]: (state, { payload }) => {\n      const { data } = payload;\n      const newState = data.map((item) => (\n        {\n          id: item.id,\n          image_id: item.image_id,\n          artist_id: item.artist_id,\n          category_ids: item.category_ids,\n          artwork_type_id: item.artwork_type_id,\n          category_titles: item.category_titles,\n          title: item.title,\n          artist_title: item.artist_title,\n          date_start: item.date_start,\n          date_end: item.date_end,\n          place_of_origin: item.place_of_origin,\n          artwork_type_title: item.artwork_type_title,\n          technique_titles: item.technique_titles,\n          material_titles: item.material_titles,\n          medium_display: item.medium_display,\n          thumbnail: item.thumbnail.lqip,\n        }));\n      return newState;\n    },\n\n    [fetchExhibitions.fulfilled]: (state, { payload }) => {\n      const { data, pagination } = payload;\n      const newState = data.filter((item) => item.artist_ids.length > 0).map((item) => ({\n        id: item.id,\n        title: item.title,\n        image_url: item.image_url,\n        status: item.status,\n        artwork_ids: item.artwork_ids,\n        department_display: item.department_display,\n        artist_ids: item.artist_ids,\n      }));\n      const { total } = pagination;\n      return [newState, total];\n    },\n\n  },\n});\n\nexport const galleryReduser = gallerySlice.actions;\nexport default gallerySlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}